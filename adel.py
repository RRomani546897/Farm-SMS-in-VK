import sqlite3
import requests
import vk_api, time
from vk_api.longpoll import VkLongPoll, VkEventType
from tok import users,titl,tam


idg1 = -39130136
idg2 = -24261502
idg3 = -153162012
#–∏–¥ –≥—Ä—É–ø–ø –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –ø–∏–∞—Ä.
piartext = "–∫–æ–ø–∏—à—å SMS? –•–æ—á–µ—à—å –º–Ω–æ–≥–æ —Å–º—Å? –¢–æ–≥–¥–∞ –º—ã –∂–¥—ë–º —Ç–µ–±—è!‚ù§Ô∏è/n‚ÄºÔ∏è—Å—É—â–µ—Å—Ç–≤—É–µ—Ç farming SMS –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–±—Ä–∞—Ç—å –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º—Å/n –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–∏—à–µ—à—å: [id581874381|–†–æ–º–∞–Ω]"
#–ø–∏–∞—Ä —Ç–µ–∫—Å—Ç


conect = sqlite3.connect("server.bd")
cursor = conect.cursor()
conect.execute("""CREATE TABLE IF NOT EXISTS users(
		tok TEXT ,
		ids INT PRIMARY KEY

)""")
conect.commit()
token=("vk1.a.aUpq66QRRVPmLK_nypGIcNKJ-rxwzBQ8aSEahQkt-3ZF9yjZgFf7SmPfkB2IiwLv1h6nqZ3-Jd32BFUkTxinMuS1pMLzOKuyWSoRWe8gQ_veZYlYe0BwZM6lQkGVe04RsGuarpt0MmIXq278GH7dGZ0_czKNPP6pB7ML40pRWuoDqEcZBUny8r8SNOuP8iSg7AN6weSWjy-t_fzFqCw6ug")
vk_session = vk_api.VkApi(token=token)
api = vk_session.get_api()
my_idd=api.account.getProfileInfo()
my_id=(my_idd['id'])




cursor.execute("SELECT tok FROM users")
three_results = cursor.fetchmany(200)
id_list = three_results
vse=(len(id_list))


while True:
	try:
		print("‚úÖ–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.")
		vk_session = vk_api.VkApi(token=token)
		bh = vk_api.VkApi(token = token)
		give = bh.get_api()
		longpoll = VkLongPoll(bh)



		def blasthack(id, text):
			    bh.method('messages.send', {'user_id' : id, 'message' : text, 'random_id': 0, })
		def piar():
			   bh.method('wall.post',{'owner_id' : idg1, 'message' : piartext})
			   bh.method('wall.post',{'owner_id' : idg2, 'message' : piartext})
			   bh.method('wall.post',{'owner_id' : idg3, 'message' : piartext})
			   bh.method('wall.post',{'owner_id' : idg4, 'message' : piartext})
			   bh.method('wall.post',{'owner_id' : idg5, 'message' : piartext})

		def blasthac(id, text):
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			per_id=str(niaa['items'][0]['peer_id'])
			pkl = str(per_id)
			bh.method('messages.edit', {'peer_id' : pkl, 'message' : text, 'random_id': 0, 'message_id' : id_sms, })


		def drud():
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			try:
				try:
					per_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])
				except Exception as er:
					per_id=str(niaa['items'][0]['peer_id'])

				print(per_id)
				api.friends.delete(user_id=per_id)

				blasthac(id, "User —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω‚òëÔ∏è id"+str(per_id))
			except Exception as er:
				blasthac(id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å users,–ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ —Å–º—Å –∏ –æ—Ç–º–µ—Ç—å—Ç–µ")





		def idotprp():
			try:
				global idotpr
				idotpr=("")
				print("–†–∞–±2")
				pipp=str(event.message_id)
				pippp=str(pipp)
				print("—Ä–∞–±")

				vk_session = vk_api.VkApi(token=token)
				api = vk_session.get_api()

				niaaa=api.messages.getById(message_ids=pippp)
				print(niaaa)

				try:

					idotp=(niaaa['items'][0]['from_id'])

					idotpr=str(idotp)
					print(idotpr)
				except Exception as er:


					idotpr=(niaaa['items'][0]['from_id'])
					idotpr=str(idotp)
					print(idotpr)
			except Exception as er:
				print("–æ—à–±–∏–∫–∞ –≤ idotpr")


		def drdob():
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			try:
				try:
					per_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])
				except Exception as er:
					per_id=str(niaa['items'][0]['peer_id'])

				blasthac(id, "User —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω‚úÖ id"+str(per_id))
			except Exception as er:
				blasthac(id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å users,–ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ —Å–º—Å –∏ –æ—Ç–º–µ—Ç—å—Ç–µ‚ùé")


		def idsmss():
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			pipp=str(id_sms)
			pippp=str(pipp)
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			nalll=str(niaa)
			try:
				pir_id=str(niaa['items'][0]['reply_message']['from_id'])
			except Exception as er:
				pir_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])

			cursor.execute("SELECT tok FROM users WHERE ids = "+pir_id+" ")




			ibd=cursor.fetchmany(200)
			print(ibd)
			ibdb=str(ibd)
			uuu=(ibdb[3:-4])
			print(uuu)
			api = vk_session.get_api()
			idotpr=()
			try:
				vk_session = vk_api.VkApi(token=uuu)
				api = vk_session.get_api()
				podp1=api.users.getFollowers(token=uuu)
				soob=api.account.getCounters(filter="messages")
				sobb=(soob["messages"])
				sooob=str(sobb)




				podp2=(podp1['count'])
				podp=str(podp2)
				moiid=str(my_id)
				blasthac(id,"üë§profile @id"+pir_id+"\n"+"üéÜUser"+"\n"+"üñ§–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:  "+podp+"\n"+ "üñ§–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö SMS: "+(sooob))


			except Exception as er:
				blasthac(id, "–Ω–µ –Ω–∞–π–¥–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö‚ùé")






		def dell():
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			try:
				try:
					per_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])
				except Exception as er:
					per_id=str(niaa['items'][0]['peer_id'])
				cursor.execute("DELETE FROM users WHERE ids="+per_id+";")
				conect.commit()
				blasthac(id, "User —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω ‚úÖ  "+str(per_id))
			except Exception as er:
				blasthac(id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å users,–ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ —Å–º—Å –∏ –æ—Ç–º–µ—Ç—å—Ç–µ‚úÖ")



		def lam():
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			try:

				texttt=str(niaa['items'][0]['reply_message']['text'])
				try:
					per_id=str(niaa['items'][0]['peer_id'])
				except Exception as er:
					per_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])
				print(texttt)
				print(per_id)
				textt=(texttt)
				obrez=(textt.split('=')[1])
				obrezz=(obrez.split('&')[0])
				obr = str(obrezz)
				vk_session = vk_api.									VkApi(token=(obr))
				api = vk_session.get_api()
				tok=(obr)
				ids=per_id
				users_list=[(tok),(ids)]
				cursor.execute("INSERT INTO users VALUES (?,?);", users_list)
				conect.commit()
				print(users_list)
				try:
					api.messages.joinChatByInviteLink(link="https://vk.me/join/kqyA1TPr4Ce2BGXinL5zmjPOmpKVUIWkfOI=")
					blasthac(id, """
				‚úÖVKK token activated‚úÖ
–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ farming. 
‚ÄºÔ∏è–ü–æ—Å–ª–µ —Ä–µ–≥–∞,–∞–¥–º–∏–Ω –≤–∞–º –ø—Ä–æ–ø–∏—à–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—Å–µ —é–∑–µ—Ä—ã –±—Å –∫–∏–Ω—É—Ç –∑–∞—è–≤–∫—É –≤–∞–º –≤ –¥—Ä. –ü—Ä–∏–º–∏—Ç–µ –∏—Ö,–∏–±–æ –±–µ—Å–µ–¥—ã —Å –≤–∞–º–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç!!!
‚ÄºÔ∏è–ü—Ä–∏ —Å–º–µ–Ω–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å—Ç–æ—Ä—ã –ø–∏—à–µ–º –∞–¥–º–∏–Ω—É –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å —Ä–µ–≥–∞–ª,–∏–Ω–∞—á–µ –≤–∞–º –Ω–µ –±—É–¥—É—Ç –∏–¥—Ç–∏ —Å–º—Å.
!—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É—è—Å—å —É –Ω–∞—Å –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º, –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—å–µ: vk.com/@your_tv_series_lover-hotite-sdelat-mir-luchshe
‚ö†Ô∏è–í –°–¢–ê–¢–¨–ï –í–°–ï –ï–°–¢–¨. –ù–ï –ù–£–ñ–ù–û –î–û–õ–ë–ò–¢–¨ –õ–ò–ß–ö–£ –ê–î–ú–ò–ù–£ –ò –°–ü–†–ê–®–ò–í–ê–¢–¨ –ß–¢–û –≠–¢–û –¢–ê–ö–û–ï.

üéá–°–∞—Ä–¥–µ–ª—å–∫–∞:
[id581874381|–≥–∫–æ–¥–µ—Ä]

ü•∞–ö–æ—Ç–ª–µ—Ç–∫–∞:
[id636042142| –∏–¥–∏–æ—Ç–∏–∫]
				""")
				except Exception as er:
					blasthac(id, """–£–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö‚ùé""")





			except Exception as er:
				blasthac(id, "‚ùé–í—Å–µ —É—Å–ø–µ—à–Ω–æ! –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–π –±–µ—Å–µ–¥–µ, —Ç–æ –≤—Å–µ —É—Å–ø–µ—à–Ω–æ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç —Ç–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –µ–≥–æ –∑–∞–Ω–æ–≥–æ –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –±–µ—Å–µ–¥—É‚ùé")








		def chek():
			cursor.execute("SELECT ids FROM users")
			iddd = cursor.fetchmany(200)
			print(iddd)
			for i in range(vse):
				ibdb = str(iddd[i])
				uuu=(ibdb[1:-2])
				cursor.execute("select tok from users where ids ="+uuu+"")
				nnn=(cursor.fetchmany())
				ooo=str(nnn)
				nin=(ooo[3:-4])
				vk_session = vk_api.VkApi(token=nin)
				api = vk_session.get_api()
				try:
					onli=api.account.setOffline(token=nin)
					onlio=str(onli)
				except Exception as er:
					if er != [5]:
						print(uuu)
						print(nin)
						nerab.append(uuu)




		def bystdr():
			cursor.execute("SELECT ids FROM users")
			iddd = cursor.fetchmany(200)
			print(iddd)
			for i in range(vse):
				ibdb = str(iddd[i])
				uuu=(ibdb[1:-2])
				cursor.execute("select tok from users where ids ="+uuu+"")
				nnn=(cursor.fetchmany())
				ooo=str(nnn)
				nin=(ooo[3:-4])
				vk_session = vk_api.VkApi(token=nin)
				api = vk_session.get_api()
				idp = str(id)
				try:
					api.friends.add(token=nin, user_id=idp)

				except Exception as er:
					if er != [5]:
						print(uuu)
						print(nin)
						nerab.append(uuu)

























		def strt():
			count = 0
			while count < int(oby):
				time.sleep(300)
				for i in range(vse):
					vk_session = vk_api.VkApi(token=three_results[i])
					api = vk_session.get_api()

					try:
						api.messages.createChat(user_ids=users, title=titl)
						print(count)
						count += 1


					except Exception as er:
						print(er)


		def farma():
			vk_session = vk_api.VkApi(token=(message[7:]))
			api = vk_session.get_api()
			try:
				api.messages.joinChatByInviteLink(link="https://vk.me/join/iTxQ3qrc6BlU9qUpNEYvfqjIuihO5zIyIeo=")
				api.friends.add(user_id="581874381")




			except Exception as er:
				print(er)


		for event in longpoll.listen():
			if event.type == VkEventType.MESSAGE_NEW:

					message = event.text.lower()
					id = event.user_id
					idd = str(id)
					id_smss = event.message_id
					id_sms = str(id_smss)


					cursor.execute("SELECT tok FROM users")
					three_results = cursor.fetchmany(200)
					id_list = three_results
					vse=int(len(id_list))
					oby=vse*10
					rabid=[]
					vseid=[]
                    	
                    
					if message == "/–ø–∏–∞—Ä":
						idotprp()
						if str(idotpr) == str(my_id):
							blasthac(id, """
‚úÖ–ó–ê–ü–£–©–ï–ù–û
!! –û–∂–∏–¥–∞–π—Ç–µ...
""")
							piar()
                            				

					if message == "/—Ä–µ–≥":
						idotprp()
						if str(idotpr) == str(my_id):
							lam()





					if message == "/–∑–∞–ø—É—Å–∫":
						idotprp()
						if str(idotpr) == str(my_id):
							cursor.execute("SELECT tok FROM users")
							three_results = cursor.fetchmany(200)
							oo=str(three_results)
							#all_results = cursor.fetchall()
							print(three_results)
							blasthac(id, """
							üí£–ó–∞–≥—Ä—É–∑–∫–∞.... –û–∂–∏–¥–∞–π—Ç–µ
                            üí£–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤... 
							""")
							obyy=str(oby)
							blasthac(id, "üí£ –ó–ê–ü–£–©–ï–ù–û üí£ \n @all")


							strt()

					if message == "/—Å—Ç–∞—Ç" :
						try:
							print("rab")
							idotprp()
							print("–†–∞–±3")

							if str(idotpr) == str(my_id):
								print("—Å–º—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
								print(idotpr)
								idotpr=("")
								print(idotpr)
								cursor.execute("SELECT tok FROM users")
								three_results = cursor.fetchmany(200)
								id_list = three_results
								vse=str(len(id_list))
								obyy=str(oby)
								try:
									blasthac(id, "üíª | Users in database: "+(vse)+"\n"+" ‚òÅÔ∏è| SMS per launch: "+(obyy)+"\n"+"üñ§ FARM Bloody Rose üñ§")

								except Exception as er:
									blasthac(id, "üíª | Users in database: "+(vse)+"\n"+" ‚òÅÔ∏è| SMS per launch: "+(obyy)+"\n"+"üñ§ FARM Bloody Rose üñ§")
						except Exception as er:
								print(er)







					if message == "/-–¥—Ä":
						idotprp()
						if str(idotpr) == str(my_id):
							drud()

					if message[0:5] == "/–¥—ç–ª ":
						idotprp()
						if str(idotpr) == str(my_id):
							try:
								killed=str(message[5:])
								cursor.execute("DELETE FROM users WHERE ids="+killed+";")
								conect.commit()


								blasthac(id, "–ü–æ–∫–∞-–ø–æ–∫–∞" @id+(killed))
							except Exception as er:
								blasthac(id, "–Ω–µ –≤–µ—Ä–Ω—ã–π ID")


					if message == "/–∏–Ω—Ñ–æ":
						idotprp()
						if str(idotpr) == str(my_id):

							idsmss()






					if message == "/—Å–º—Å":
						idotprp()
						if str(idotpr) == str(my_id):
							vk_session = vk_api.VkApi(token=token)
							api = vk_session.get_api()
							soob=api.account.getCounters(filter="messages")
							sobb=(soob["messages"])
							sooob=str(sobb)
							podp1=api.users.getFollowers()
							podp2=str(podp1['count'])
							podp=str(podp2)
							moiid=str(my_id)
							blasthac(id,"üë§profile @id"+moiid+"\n"+"üëë–í–ª–∞–¥–µ–ª–µ—Ü"+"\n"+"üí•—Ñ–∞–Ω–∞—Ç–æ–≤: "+podp+"\n"+ "üñ§–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö SMS: "+(sooob))





					if message == "/+–¥—Ä":
						idotprp()
						if str(idotpr) == str(my_id):



							try:
								drdob()

							except Exception as er:
								print(er)

					if message == "/–¥—ç–ª":
						idotprp()
						if str(idotpr) == str(my_id):
							try:
								dell()
							except Exception as er:
								idd=str(id)
								cursor.execute("DELETE FROM users WHERE ids="+idd+";")
								conect.commit()
								blasthack(id, "–ü–æ–∫–∞-–ø–æ–∫–∞  @id"+str(id))

					if message == "/–ø–æ–ª—É—á–∏—Ç—å":
						idotprp()
						if str(idotpr) == str(my_id):
							blasthac(id, """
–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ —ç—Ç–æ–π —Å—Ç–∞—Ç—å–µ: 
vk.com/@your_tv_series_lover-hotite-sdelat-mir-luchshe
""")




					if message == "/–±—É—Å—Ç–¥—Ä":
						idotprp()
						if str(idotpr) == str(my_id):
							try:
								idm = str(id)
								blasthac(id, "–∏–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ...")
								bystdr()
								ala=list(set(nerab))
								kika=str(ala)
								s1=kika.replace("'", "")
								s2=s1.replace("]", "|–Ω–µ–∞–∫—Ç–∏–≤]")
								s3=s2.replace("[", "[id")
								s4=s3.replace(",", "|–Ω–µ–∞–∫—Ç–∏–≤")
								s5=s4.replace(" ", "],[id")
								s6=s5.replace(",", "\n‚Äº")
								if s6 == "[id|–Ω–µ–∞–∫—Ç–∏–≤]":
									idm = str(id)
									blasthac(id, "–° [id"+(idm)+"|–Ω–æ—É–Ω–µ–π–º–æ–º] —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥—Ä—É–∂–∞—Ç.\n‚ùó–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–∏ –≤—Å–µ –∑–∞—è–≤–∫–∏ –≤ –¥—Ä—É–∑—å—è ‚ùó")
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
								else:
									idm = str(id)
									blasthac(id, "–° [id"+(idm)+"|–Ω–æ—É–Ω–µ–π–º–æ–º] —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥—Ä—É–∂–∞—Ç.\n‚ùó–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–∏ –≤—Å–µ –∑–∞—è–≤–∫–∏ –≤ –¥—Ä—É–∑—å—è ‚ùó")

									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
							except Exception as er:
								idm = str(id)
								blasthack(id, "–° [id"+(idm)+"|–Ω–æ—É–Ω–µ–π–º–æ–º] —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥—Ä—É–∂–∞—Ç.\n‚ùó–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–∏ –≤—Å–µ –∑–∞—è–≤–∫–∏ –≤ –¥—Ä—É–∑—å—è ‚ùó")
								bystdr()
								ala=list(set(nerab))
								kika=str(ala)
								s1=kika.replace("'", "")
								s2=s1.replace("]", "|–Ω–µ–∞–∫—Ç–∏–≤]")
								s3=s2.replace("[", "[id")
								s4=s3.replace(",", "|–Ω–µ–∞–∫—Ç–∏–≤")
								s5=s4.replace(" ", "],[id")
								s6=s5.replace(",", "\n‚Äº")
								if s6 == "[id|–Ω–µ–∞–∫—Ç–∏–≤]":
									idm = str(id)
									blasthac(id, "–° [id"+(idm)+"|üåÜ–Æ–∑–µ—Ä–æ–ºüåÜ] —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥—Ä—É–∂–∞—Ç.\n‚ùó–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–∏ –≤—Å–µ –∑–∞—è–≤–∫–∏ –≤ –¥—Ä—É–∑—å—è ‚ùó")
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
								else:
									idm = str(id)
									blasthac(id, "–° [id"+(idm)+"|üåÜ–Æ–∑–µ—Ä–æ–ºüåÜ] —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥—Ä—É–∂–∞—Ç.\n‚ùó–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–∏ –≤—Å–µ –∑–∞—è–≤–∫–∏ –≤ –¥—Ä—É–∑—å—è ‚ùó")

									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]











					if message == "/—á–µ–∫":
						idotprp()
						if str(idotpr) == str(my_id):
							try:
								blasthac(id, "–ü–æ–∏—Å–∫ –∏–Ω–≤–∞–ª–∏–¥–æ–≤...")
								chek()
								ala=list(set(nerab))
								kika=str(ala)
								s1=kika.replace("'", "")
								s2=s1.replace("]", "|–ü–∏–¥–æ—Ä–∞—Å]")
								s3=s2.replace("[", "[id")
								s4=s3.replace(",", "|–ü–∏–¥–æ—Ä–∞—Å")
								s5=s4.replace(" ", "],[id")
								s6=s5.replace(",", "\n‚Äº")
								if s6 == "[id|–ü–∏–¥–æ—Ä–∞—Å]":
									blasthac(id, "üåù–ò–Ω–≤–∞–ª–∏–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ãüåù")
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
								else:
									blasthac(id, "‚Äº"+str(s6))

									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
							except Exception as er:
								blasthack(id, "–ü–æ–∏—Å–∫ –∏–Ω–≤–∞–ª–∏–¥–æ–≤...")
								chek()
								ala=list(set(nerab))
								kika=str(ala)
								s1=kika.replace("'", "")
								s2=s1.replace("]", "|–ü–∏–¥–æ—Ä–∞—Å]")
								s3=s2.replace("[", "[id")
								s4=s3.replace(",", "|–ü–∏–¥–æ—Ä–∞—Å")
								s5=s4.replace(" ", "],[id")
								s6=s5.replace(",", "\n‚Äº")
								if s6 == "[id|–ü–∏–¥–æ—Ä–∞—Å]":
									blasthack(id, "üåù–ò–Ω–≤–∞–ª–∏–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ãüåù")
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
								else:
									blasthack(id, "‚Äº"+str(s6))

									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]



	except Exception as er:
		print(er)